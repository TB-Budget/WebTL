--WebTL - библиотека для работа с технологиями Интернет (c) Златовратский Павел(ТБ.Бюджет), 2017

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited HTTPCall "Результат запроса в виде страницы под разбор";

inclass
  func CreateEx(aHost:string; aMapper:Variant):SimpleRestGet;
  --* INPUTS
  --* HOST - адрес сервера со слешем на конце!
  --* Mapper - как разбирать результат
    Result = Create;
    Result.Host = aHost;
    Result.Parser = aMapper;
  end;

inobject
  var Host: String;

  func Вызвать synonym Call(Params:Variant[]): Variant;
  --* Params - должне содержать 1 параметр - URL
    var AsyncCla: Class;
    Result = self.DoRequest(self.host + Params[1]);

    AsyncCla = FindClass('WebTL.HTTPAsync');
    if result.InheritsFrom(AsyncCla) then
       Result.id = self.host + Params[1];
    end;

  end;

  end